(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{225:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"shouldupdate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shouldupdate","aria-hidden":"true"}},[t._v("#")]),t._v(" ShouldUpdate")]),t._v(" "),s("p",[t._v("当数据发生变更，Store 会扁平化地通知所有组件，并且使用 Identical （默认）比较新旧两份数据来决定是否需要刷新。如果对组件的刷新会有非常精确化的诉求，那么我们可以自己定义一个 ShouldUpdate。")]),t._v(" "),s("p",[t._v("示例代码")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[t._v("bool "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DetailState old"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DetailState now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" old"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=n.exports}}]);